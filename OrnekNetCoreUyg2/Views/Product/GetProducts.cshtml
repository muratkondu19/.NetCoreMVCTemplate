@*view dosyaları cshtml uzantılı dosyalardır ->razor teknolojisi ->html ve c#'in tek bir dosya üzerinde kullanılması*@
@*razor->mvc teknolojisine özel, viewın kodlanması için geliştirilmiş bir teknolojidir. *@

<h3>Tüm Ürünler</h3>


@*VIEWMODEL İLE NESNE KARŞILAMA*@

@*@model OrnekNetCoreUyg2.Models.ViewModels.UserProduct*@
@*<h4>@Model.Product.ProductName</h4>*@
@*<h4>@Model.User.Name</h4>*@

@*TUPLE İLE NESNE KARŞIŞAMA*@

@*Gelecek olan nesnenin türünü belirtme*@
@model (OrnekNetCoreUyg2.Models.Product p,OrnekNetCoreUyg2.Models.User u)
<h4>@Model.p.ProductName</h4>
<h4>@Model.p.Id</h4>
<h4>@Model.u.Name</h4>


@*RAZOR HAKKINDA *@
@*RAZOR -> ASP.Net Core MVC mimarisinde .cshtml uzantılı dosyalarda HTML ile birlikte yazılan C# kodlarının server tarafında çalıştırılmasını sağlayan bir teknolojidir. *@
@*@ operatörü razor operatörüdür*@

@*Razor ile değişken oluşturma *@
@{
    string text = "Text değişkeni";
}

@*Razor ile değişken okuma *@
@{
    int a = 5;
    Console.WriteLine(a);
}

@*Razor ile parçalı scope yapısı *@
@*sayfa içerisinde tanımlanan birden fazla razer scope,derlendiğinde tek bir scope olarak nitelendirilir *@
@*tanımlanan değişkenler derlendiğinde aynı scope içerisinde olduğundan erişilebilir durumdadır*@
@{
    Console.WriteLine(text);
}

@*Razor ile HTML Kullanımı *@
@{
    <div>text</div>
}

@*Razor içerisinde <text> </text> Etiketi kullanımı*@
@{
    if (true)
    {
        <text>EVET</text>
    }
    else
    {
        <text>Hayır</text>
    }
}

@*Razor ile tek satırlık işlemler*@
<h3>@(5 + 4)</h3>
<h3>@(55 % 5 == 4 ? "Evet" : "Hayır")</h3>

@*Koşul yapıları *@
@{
    int sayi = 5;
}
@*sadece koşulun başında belirtilmesi yeterlidir, scope oluşturmaya gerek duyulmaz*@
@if (sayi == 5)
{
    <h3>sayi</h3>
}
else
{
    <h3>Sorun mevcut</h3>
}